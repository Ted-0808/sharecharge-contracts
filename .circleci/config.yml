# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2

defaults: 
  - &stage_defaults
    working_directory: ~/contracts

  - &docker_defaults
    image: circleci/node

  - &npm_auth
    run:
      name: npm secret
      command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/.npmrc

jobs:

  build:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install
          command: |
            npm install
            npm install ganache-cli@6.1.0

      # update cache if needed
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - persist_to_workspace:
          root: ~/contracts
          paths: .

  compile:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:

      - attach_workspace:
          at: ~/contracts

      - run:
          name: truffle compile
          command: ./node_modules/.bin/truffle compile

  test:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:

      - attach_workspace:
          at: ~/contracts

      # run rpc
      - run:
          name: Run test-rpc
          background: true
          command: |
            ./node_modules/.bin/ganache-cli

      # run tests
      - run:
          name: Run test
          command: |
            npm test

deploy:

    <<: *stage_defaults

    docker:
      - <<: *docker_defaults

    steps:

      - attach_workspace:
          at: ~/contracts

      - <<: *npm_auth

      # run tests
      - run:
          name: Publish
          command: npm publish

workflows:
  version: 2
  build_compile_test:
    jobs:
      - build
      - compile:
          requires:
            - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - compile
            - test